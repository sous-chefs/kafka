#!/bin/sh
### BEGIN INIT INFO
# Required-Start:    $remote_fs $network $named
# Required-Stop:     $remote_fs $network $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: <%= @daemon_name %> daemon
### END INIT INFO

NAME=<%= @daemon_name %>
USER=<%= @user %>
PIDFILE=/var/run/$NAME.pid

# Load the VERBOSE setting and other rcS variables
[ -f /lib/init/vars.sh ] && . /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
[ -f /lib/lsb/init-functions ] && . /lib/lsb/init-functions

# Load additional configuration
[ -f /etc/default/$NAME ] && . /etc/default/$NAME

<%= render 'partials/check_running.erb', variables: {port: @port} -%>

do_start()
{
  <% if node.kafka.ulimit_file %>
  ulimit -n <%= node.kafka.ulimit_file %>
  <% end %>
  start-stop-daemon --start --quiet --chuid $USER --pidfile $PIDFILE --test --startas $KAFKA_RUN -- $KAFKA_ARGS $KAFKA_CONFIG > /dev/null \
    || return 1

  start-stop-daemon --start --quiet --chuid $USER --pidfile $PIDFILE --make-pidfile --background --exec $KAFKA_RUN -- $KAFKA_ARGS $KAFKA_CONFIG \
    || return 2

  RETVAL=$?
  check_running && return "$RETVAL"
}

do_stop()
{
  <% if controlled_shutdown_enabled? %>
  start-stop-daemon --stop --quiet --oknodo --signal=TERM --pidfile "$PIDFILE"
  RETVAL=$?
  while pidofproc "$PIDFILE" "$KAFKA"; do sleep 1; done
  <% else %>
  start-stop-daemon --stop --quiet --oknodo --retry=TERM/10/KILL/5 --pidfile "$PIDFILE"
  RETVAL="$?"
  <% end %>
  rm -f $PIDFILE
  return "$RETVAL"
}

case "$1" in
  start)
    log_daemon_msg "Starting" "$NAME"
    do_start
    case "$?" in
      0|1) log_end_msg 0 ;;
      2)   log_end_msg 1 ;;
    esac
    ;;
  stop)
    log_daemon_msg "Stopping" "$NAME"
    do_stop
    case "$?" in
      0|1) log_end_msg 0 ;;
      2)   log_end_msg 1 ;;
    esac
    ;;
  restart)
    $0 stop && sleep 2 && $0 start
    ;;
  status)
    status_of_proc -p $PIDFILE "$KAFKA_RUN" "$NAME" && exit 0 || exit $?
    ;;
  *)
    echo "Usage: $NAME {start|stop|restart|status}" >&2
    exit 3
    ;;
esac
